import { BlockWithAddons, BlockWithoutAddons } from "../types/blocks.js";
import { Creation } from "../types/creations.js";
import { ProductionMode } from "../types/modes.js";
export type ProduceBlockSettings<Addons extends object | undefined, Options extends object> = Addons extends object ? ProduceBlockSettingsWithAddons<Addons, Options> : ProduceBlockSettingsWithoutAddons<Options>;
export interface ProduceBlockSettingsWithAddons<Addons extends object, Options extends object> extends ProduceBlockSettingsWithoutAddons<Options> {
    addons?: Addons;
}
export interface ProduceBlockSettingsWithoutAddons<Options extends object> {
    mode?: ProductionMode;
    offline?: boolean;
    options: Options;
}
export declare function produceBlock<Addons extends object, Options extends object>(block: BlockWithAddons<Addons, Options>, settings: ProduceBlockSettingsWithAddons<Addons, Options>): Partial<Creation<Options>>;
export declare function produceBlock<Options extends object>(block: BlockWithoutAddons<Options>, settings: ProduceBlockSettingsWithoutAddons<Options>): Partial<Creation<Options>>;
