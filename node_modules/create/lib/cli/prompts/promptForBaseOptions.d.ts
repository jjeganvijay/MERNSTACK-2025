import { AnyShape, InferredObject } from "../../options.js";
import { Base } from "../../types/bases.js";
import { SystemContext } from "../../types/system.js";
export type PromptedBaseOptions<Options extends object> = PromptedBaseOptionsCancelled<Options> | PromptedBaseOptionsProduced<Options>;
export interface PromptedBaseOptionsCancelled<Options extends object> {
    cancelled: true;
    prompted: Partial<Options>;
}
export interface PromptedBaseOptionsProduced<Options extends object> {
    cancelled: false;
    completed: Options;
    prompted: Partial<Options>;
}
export interface PromptForBaseOptionsSettings<OptionsShape extends AnyShape> {
    existing: Partial<InferredObject<OptionsShape>>;
    offline?: boolean;
    system: SystemContext;
}
export declare function promptForBaseOptions<OptionsShape extends AnyShape = AnyShape>(base: Base<OptionsShape>, { existing, offline, system }: PromptForBaseOptionsSettings<OptionsShape>): Promise<PromptedBaseOptions<InferredObject<OptionsShape>>>;
