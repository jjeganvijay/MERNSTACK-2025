import { BlockWithAddons, BlockWithoutAddons } from "../types/blocks.js";
import { IndirectCreation } from "../types/creations.js";
import { NativeSystem } from "../types/system.js";
export type RunBlockSettings<Addons extends object | undefined, Options extends object> = Addons extends object ? RunBlockSettingsWithOptionalAddons<Addons, Options> : RunBlockSettingsWithoutAddons<Options>;
export interface RunBlockSettingsWithOptionalAddons<Addons extends object, Options extends object> extends RunBlockSettingsWithoutAddons<Options> {
    addons?: Addons;
}
export interface RunBlockSettingsWithoutAddons<Options extends object> extends Partial<NativeSystem> {
    created?: Partial<IndirectCreation<Options>>;
    directory?: string;
    offline?: boolean;
    options: Options;
}
export interface RunBlockSettingsWithRequiredAddons<Addons extends object, Options extends object> extends RunBlockSettingsWithoutAddons<Options> {
    addons: Addons;
}
export declare function runBlock<Addons extends object, Options extends object>(block: BlockWithAddons<Addons, Options>, settings: RunBlockSettingsWithOptionalAddons<Addons, Options>): Promise<void>;
export declare function runBlock<Options extends object>(block: BlockWithoutAddons<Options>, settings: RunBlockSettingsWithoutAddons<Options>): Promise<void>;
